{"ast":null,"code":"import _asyncToGenerator from \"/home/joshet/Documentos/proyectos/fron-end-yo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Marca, marcas } from '../../../modelo/marca.class';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class GestionMarcaservice {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = \"http://127.0.0.1:8080/api/marca\";\n    this.listar = [];\n  }\n\n  listarMarca() {\n    this.http.get(this.baseUrl).subscribe(resp => {\n      this.listar = resp;\n    });\n  }\n\n  agregarmarca(nombreMarca) {\n    const nuevoMarca = new Marca(0, nombreMarca, []);\n    marcas.push(nuevoMarca);\n  }\n\n  agregarmarcaa(marca) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      //this.http.post<any>(this.baseUrl,marca).subscribe();\n      const promesa = _this.http.post(_this.baseUrl, marca).toPromise();\n\n      promesa.then();\n      return true;\n    })();\n  }\n\n  eliminarmarcaa(id) {\n    return this.http.delete(this.baseUrl + '/' + id).subscribe();\n  }\n\n  atualizarmarcaa(id, marca) {\n    this.http.put(this.baseUrl + '/' + id, marca).subscribe();\n  }\n\n  eliminarmarca(eliminacion) {\n    eliminacion.sort(function (a, b) {\n      return b - a;\n    });\n\n    for (let i = 0; eliminacion.length > i; i++) {\n      marcas.splice(eliminacion[i], 1);\n    }\n  }\n\n}\n\nGestionMarcaservice.ɵfac = function GestionMarcaservice_Factory(t) {\n  return new (t || GestionMarcaservice)(i0.ɵɵinject(i1.HttpClient));\n};\n\nGestionMarcaservice.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GestionMarcaservice,\n  factory: GestionMarcaservice.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/joshet/Documentos/proyectos/fron-end-yo/src/app/gestion/gestion-marca-main/services/gestion-marca.service.ts"],"names":[],"mappings":";AAEA,SAAS,KAAT,EAAgB,MAAhB,QAA8B,6BAA9B;;;AAMA,OAAM,MAAO,mBAAP,CAA0B;AAI5B,EAAA,WAAA,CAAoB,IAApB,EAAoC;AAAhB,SAAA,IAAA,GAAA,IAAA;AAFZ,SAAA,OAAA,GAAU,iCAAV;AAID,SAAA,MAAA,GAAkB,EAAlB;AAFgC;;AAIvC,EAAA,WAAW,GAAA;AACP,SAAK,IAAL,CAAU,GAAV,CAAuB,KAAK,OAA5B,EACC,SADD,CACW,IAAI,IAAG;AACd,WAAK,MAAL,GAAc,IAAd;AACH,KAHD;AAIH;;AAGD,EAAA,YAAY,CAAC,WAAD,EAAmB;AAC3B,UAAM,UAAU,GAAO,IAAI,KAAJ,CAAU,CAAV,EAAY,WAAZ,EAAwB,EAAxB,CAAvB;AACA,IAAA,MAAM,CAAC,IAAP,CAAY,UAAZ;AACH;;AAEK,EAAA,aAAa,CAAC,KAAD,EAAa;AAAA;;AAAA;AAC5B;AACA,YAAM,OAAO,GAAG,KAAI,CAAC,IAAL,CAAU,IAAV,CAAoB,KAAI,CAAC,OAAzB,EAAiC,KAAjC,EAAwC,SAAxC,EAAhB;;AACA,MAAA,OAAO,CAAC,IAAR;AACA,aAAO,IAAP;AAJ4B;AAK/B;;AAED,EAAA,cAAc,CAAC,EAAD,EAAW;AACrB,WAAO,KAAK,IAAL,CAAU,MAAV,CAAiB,KAAK,OAAL,GAAa,GAAb,GAAiB,EAAlC,EAAsC,SAAtC,EAAP;AACH;;AAED,EAAA,eAAe,CAAC,EAAD,EAAa,KAAb,EAAyB;AACpC,SAAK,IAAL,CAAU,GAAV,CAAmB,KAAK,OAAL,GAAa,GAAb,GAAiB,EAApC,EAAwC,KAAxC,EAA+C,SAA/C;AACH;;AAID,EAAA,aAAa,CAAC,WAAD,EAAqB;AAC9B,IAAA,WAAW,CAAC,IAAZ,CAAiB,UAAS,CAAT,EAAY,CAAZ,EAAa;AAAE,aAAO,CAAC,GAAG,CAAX;AAAa,KAA7C;;AACA,SAAI,IAAI,CAAC,GAAQ,CAAjB,EAAmB,WAAW,CAAC,MAAZ,GAAmB,CAAtC,EAAwC,CAAC,EAAzC,EAA4C;AACxC,MAAA,MAAM,CAAC,MAAP,CAAc,WAAW,CAAC,CAAD,CAAzB,EAA6B,CAA7B;AACD;AACN;;AA3C2B;;;mBAAnB,mB,EAAmB,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,UAAA,C;AAAA,C;;;SAAnB,mB;AAAmB,EAAA,OAAA,EAAnB,mBAAmB,CAAA,I;AAAA,EAAA,UAAA,EAFhB","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\"\nimport { Marca, marcas } from '../../../modelo/marca.class';\nimport { Observable, Subscription } from \"rxjs\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GestionMarcaservice{\n\n    private baseUrl = \"http://127.0.0.1:8080/api/marca\"\n\n    constructor(private http: HttpClient){}\n\n    public listar: Marca[] = []\n\n    listarMarca(){\n        this.http.get<Marca[]>(this.baseUrl)\n        .subscribe(resp => {\n            this.listar = resp\n        })\n    }\n\n\n    agregarmarca(nombreMarca:String){\n        const nuevoMarca:Marca=new Marca(0,nombreMarca,[])\n        marcas.push(nuevoMarca);\n    }\n\n    async agregarmarcaa(marca: Marca){\n        //this.http.post<any>(this.baseUrl,marca).subscribe();\n        const promesa = this.http.post<any>(this.baseUrl,marca).toPromise();\n        promesa.then();\n        return true;\n    }\n\n    eliminarmarcaa(id: number){\n        return this.http.delete(this.baseUrl+'/'+id).subscribe();\n    }\n\n    atualizarmarcaa(id: number, marca: Marca){\n        this.http.put<any>(this.baseUrl+'/'+id, marca).subscribe();\n    }\n\n   \n\n    eliminarmarca(eliminacion:number[]){\n        eliminacion.sort(function(a, b){return b - a});\n        for(let i:number=0;eliminacion.length>i;i++){\n            marcas.splice(eliminacion[i],1)    \n          }\n    }\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}